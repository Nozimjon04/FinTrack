@inject AuthService AuthService
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider



@if (IsAuthenticated)
{
    <div class="top-row ps-3 navbar navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">FinTrack</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>
    <div class="@NavMenuCssClass nav-scrollable">
        <nav class="flex-column">
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="dashboard">
                    <span class="oi oi-dashboard" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="expenses">
                    <span class="oi oi-dollar" aria-hidden="true"></span> Expenses
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="expense-categories">
                    <span class="oi oi-folder" aria-hidden="true"></span> Expense Categories
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <button class="nav-link btn btn-link text-danger" @onclick="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </button>
            </div>
        </nav>
    </div>
}
    

@code {
    private bool collapseNavMenu = true;
    private bool IsAuthenticated = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Nav.NavigateTo("/", true);
    }
}
